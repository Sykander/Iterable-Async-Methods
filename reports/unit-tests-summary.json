{
  "stats": {
    "suites": 66,
    "tests": 88,
    "passes": 88,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-29T15:50:47.682Z",
    "end": "2020-12-29T15:50:47.821Z",
    "duration": 139
  },
  "tests": [
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Filter Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Filter Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Filter Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should filter each item based on callback result",
      "fullTitle": "Async Filter Given a synchronous callback Should filter each item based on callback result",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Filter Given a synchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Filter Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should filter each item based on callback result",
      "fullTitle": "Async Filter Given an asynchronous callback Should filter each item based on callback result",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Filter Given an asynchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Filter Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Filter Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Filter Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Find Index Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Find Index Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Index Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct index",
      "fullTitle": "Async Find Index Given a synchronous callback Should find the correct index",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should always resolve to an integer",
      "fullTitle": "Async Find Index Given a synchronous callback Should always resolve to an integer",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Index Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct index",
      "fullTitle": "Async Find Index Given an asynchronous callback Should find the correct index",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should always resolve to an integer",
      "fullTitle": "Async Find Index Given an asynchronous callback Should always resolve to an integer",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Find Index Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Find Index Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Find Index Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Find Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Find Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct element",
      "fullTitle": "Async Find Given a synchronous callback Should find the correct element",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct element",
      "fullTitle": "Async Find Given an asynchronous callback Should find the correct element",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Find Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Find Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Find Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async For Each Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async For Each Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async For Each Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async For Each Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async For Each Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async For Each Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async For Each Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Map Sort Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Map Sort Given no mappingFunction Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each mappingFunction in order",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should run each mappingFunction in order",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort by unicode after mapping",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should sort by unicode after mapping",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each mappingFunction in order",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should run each mappingFunction in order",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort by unicode after mapping",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should sort by unicode after mapping",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Map Sort Given a mappingFunction that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the mappingFunction",
      "fullTitle": "Async Map Sort Given a mappingFunction that uses all arguments Should have access to currentValue, index and array on the mappingFunction",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to first and second elements",
      "fullTitle": "Async Map Sort Given an optional comparisonFunction that uses all arguments Should have access to first and second elements",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 17,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Map Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Map Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Map Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should map each item in order",
      "fullTitle": "Async Map Given a synchronous callback Should map each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Given a synchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Map Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should map each item in order",
      "fullTitle": "Async Map Given an asynchronous callback Should map each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Given an asynchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Map Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Map Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Map Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Reduce Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Reduce Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: asyncReduce of empty array with no accumulator given",
      "fullTitle": "Async Reduce Given an empty array, a callback and no accumulator Should reject with \"TypeError: asyncReduce of empty array with no accumulator given",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Reduce Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reduce each item in order",
      "fullTitle": "Async Reduce Given a synchronous callback Should reduce each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the completed value accumulator",
      "fullTitle": "Async Reduce Given a synchronous callback Should resolve to the completed value accumulator",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Reduce Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reduce each item in order",
      "fullTitle": "Async Reduce Given an asynchronous callback Should reduce each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the completed value accumulator",
      "fullTitle": "Async Reduce Given an asynchronous callback Should resolve to the completed value accumulator",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Reduce Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to accumulator, currentValue, index and array on the callback",
      "fullTitle": "Async Reduce Given a callback that uses all arguments Should have access to accumulator, currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 13,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to accumulator on all callback iterations",
      "fullTitle": "Async Reduce Given the optional accumulator parameter Should have accesss to accumulator on all callback iterations",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Sort Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort elements by unicode value",
      "fullTitle": "Async Sort Given no callback Should sort elements by unicode value",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort each item by the compareFunc result",
      "fullTitle": "Async Sort Given a synchronous compareFunc Should sort each item by the compareFunc result",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the same array",
      "fullTitle": "Async Sort Given a synchronous compareFunc Should resolve to the same array",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort each item by the compareFunc result",
      "fullTitle": "Async Sort Given an asynchronous compareFunc Should sort each item by the compareFunc result",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the same array",
      "fullTitle": "Async Sort Given an asynchronous compareFunc Should resolve to the same array",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Sort Given a compareFunc that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to first and second elements",
      "fullTitle": "Async Sort Given a compareFunc that uses all arguments Should have access to first and second elements",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFilter function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFilter function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFindIndex function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFindIndex function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFind function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFind function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncForEach function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncForEach function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncMapSort function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncMapSort function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncMap function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncMap function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncReduce function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncReduce function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncSort function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncSort function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Filter Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Filter Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Filter Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should filter each item based on callback result",
      "fullTitle": "Async Filter Given a synchronous callback Should filter each item based on callback result",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Filter Given a synchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Filter Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should filter each item based on callback result",
      "fullTitle": "Async Filter Given an asynchronous callback Should filter each item based on callback result",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Filter Given an asynchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Filter Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Filter Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 6,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Filter Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-filter.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Find Index Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Find Index Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Index Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct index",
      "fullTitle": "Async Find Index Given a synchronous callback Should find the correct index",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should always resolve to an integer",
      "fullTitle": "Async Find Index Given a synchronous callback Should always resolve to an integer",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Index Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct index",
      "fullTitle": "Async Find Index Given an asynchronous callback Should find the correct index",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should always resolve to an integer",
      "fullTitle": "Async Find Index Given an asynchronous callback Should always resolve to an integer",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Find Index Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Find Index Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Find Index Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-find-index.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Find Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Find Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct element",
      "fullTitle": "Async Find Given a synchronous callback Should find the correct element",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Find Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should find the correct element",
      "fullTitle": "Async Find Given an asynchronous callback Should find the correct element",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Find Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Find Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 3,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Find Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-find.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async For Each Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async For Each Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async For Each Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async For Each Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async For Each Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async For Each Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async For Each Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-for-each.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Map Sort Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Map Sort Given no mappingFunction Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each mappingFunction in order",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should run each mappingFunction in order",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort by unicode after mapping",
      "fullTitle": "Async Map Sort Given a synchronous mappingFunction Should sort by unicode after mapping",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each mappingFunction in order",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should run each mappingFunction in order",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort by unicode after mapping",
      "fullTitle": "Async Map Sort Given an asynchronous mappingFunction Should sort by unicode after mapping",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Map Sort Given a mappingFunction that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the mappingFunction",
      "fullTitle": "Async Map Sort Given a mappingFunction that uses all arguments Should have access to currentValue, index and array on the mappingFunction",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to first and second elements",
      "fullTitle": "Async Map Sort Given an optional comparisonFunction that uses all arguments Should have access to first and second elements",
      "file": "/home/sykander/workspace/patterns/test/async-map-sort.spec.js",
      "duration": 17,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Map Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Map Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Map Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should map each item in order",
      "fullTitle": "Async Map Given a synchronous callback Should map each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Given a synchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Map Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should map each item in order",
      "fullTitle": "Async Map Given an asynchronous callback Should map each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to a new array",
      "fullTitle": "Async Map Given an asynchronous callback Should resolve to a new array",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Map Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to currentValue, index and array on the callback",
      "fullTitle": "Async Map Given a callback that uses all arguments Should have access to currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to thisArg on callback",
      "fullTitle": "Async Map Given the optional thisArg parameter Should have accesss to thisArg on callback",
      "file": "/home/sykander/workspace/patterns/test/async-map.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Reduce Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not a function\"",
      "fullTitle": "Async Reduce Given no callback Should reject with \"TypeError: undefined is not a function\"",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: asyncReduce of empty array with no accumulator given",
      "fullTitle": "Async Reduce Given an empty array, a callback and no accumulator Should reject with \"TypeError: asyncReduce of empty array with no accumulator given",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Reduce Given a synchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reduce each item in order",
      "fullTitle": "Async Reduce Given a synchronous callback Should reduce each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the completed value accumulator",
      "fullTitle": "Async Reduce Given a synchronous callback Should resolve to the completed value accumulator",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should run each callback in order",
      "fullTitle": "Async Reduce Given an asynchronous callback Should run each callback in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reduce each item in order",
      "fullTitle": "Async Reduce Given an asynchronous callback Should reduce each item in order",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the completed value accumulator",
      "fullTitle": "Async Reduce Given an asynchronous callback Should resolve to the completed value accumulator",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Reduce Given a callback that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to accumulator, currentValue, index and array on the callback",
      "fullTitle": "Async Reduce Given a callback that uses all arguments Should have access to accumulator, currentValue, index and array on the callback",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 13,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have accesss to accumulator on all callback iterations",
      "fullTitle": "Async Reduce Given the optional accumulator parameter Should have accesss to accumulator on all callback iterations",
      "file": "/home/sykander/workspace/patterns/test/async-reduce.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with \"TypeError: undefined is not iterable\"",
      "fullTitle": "Async Sort Given no arguments Should reject with \"TypeError: undefined is not iterable\"",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort elements by unicode value",
      "fullTitle": "Async Sort Given no callback Should sort elements by unicode value",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort each item by the compareFunc result",
      "fullTitle": "Async Sort Given a synchronous compareFunc Should sort each item by the compareFunc result",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 2,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the same array",
      "fullTitle": "Async Sort Given a synchronous compareFunc Should resolve to the same array",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should sort each item by the compareFunc result",
      "fullTitle": "Async Sort Given an asynchronous compareFunc Should sort each item by the compareFunc result",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should resolve to the same array",
      "fullTitle": "Async Sort Given an asynchronous compareFunc Should resolve to the same array",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should reject with that error",
      "fullTitle": "Async Sort Given a compareFunc that throws an error Should reject with that error",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have access to first and second elements",
      "fullTitle": "Async Sort Given a compareFunc that uses all arguments Should have access to first and second elements",
      "file": "/home/sykander/workspace/patterns/test/async-sort.spec.js",
      "duration": 4,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFilter function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFilter function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFindIndex function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFindIndex function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncFind function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncFind function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncForEach function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncForEach function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncMapSort function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncMapSort function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncMap function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncMap function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncReduce function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncReduce function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "Should have the asyncSort function",
      "fullTitle": "Iterable Async module Module properties Should have the asyncSort function",
      "file": "/home/sykander/workspace/patterns/test/iterable-async.spec.js",
      "duration": 0,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    }
  ]
}